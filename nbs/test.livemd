# test

```elixir
Mix.install([{:kino_fly, path: "."}])
```

## Section

<!-- livebook:{"attrs":{},"chunks":null,"kind":"Elixir.KinoFly","livebook_object":"smart_cell"} -->

```elixir
IO.puts("No source code for this cell.")
```

```elixir
x = [
  %{
    "config" => %{
      "guest" => %{"cpu_kind" => "shared", "cpus" => 1, "memory_mb" => 256},
      "image" => "metabase/metabase:latest",
      "init" => %{},
      "restart" => %{}
    },
    "created_at" => "2023-06-16T19:22:27Z",
    "events" => [
      %{
        "id" => "01H32TTTAG21Z18XD47294X1J0",
        "request" => %{
          "exit_event" => %{
            "error" => "",
            "exit_code" => 137,
            "exited_at" => "2023-06-16T19:27:36.137Z",
            "guest_error" => "",
            "guest_exit_code" => 0,
            "guest_signal" => -1,
            "oom_killed" => true,
            "requested_stop" => false,
            "restarting" => false,
            "signal" => -1
          },
          "restart_count" => 10
        },
        "source" => "flyd",
        "status" => "stopped",
        "timestamp" => 1_686_943_656_272,
        "type" => "exit"
      },
      %{
        "id" => "01H32TTDBNP318EVF4EEC6932Q",
        "source" => "flyd",
        "status" => "started",
        "timestamp" => 1_686_943_642_997,
        "type" => "start"
      },
      %{
        "id" => "01H32TTD4PNWZXQ26WNQFGWG9J",
        "source" => "flyd",
        "status" => "starting",
        "timestamp" => 1_686_943_642_774,
        "type" => "start"
      },
      %{
        "id" => "01H32TS9XBPA5286FMSNM7YSTQ",
        "request" => %{
          "exit_event" => %{
            "error" => "",
            "exit_code" => 137,
            "exited_at" => "2023-06-16T19:26:46.560Z",
            "guest_error" => "",
            "guest_exit_code" => 0,
            "guest_signal" => -1,
            "oom_killed" => true,
            "requested_stop" => false,
            "restarting" => true,
            "signal" => -1
          },
          "restart_count" => 10
        },
        "source" => "flyd",
        "status" => "stopped",
        "timestamp" => 1_686_943_606_699,
        "type" => "exit"
      },
      %{
        "id" => "01H32TRR1ZT78DKWBDKJHCYDY8",
        "source" => "flyd",
        "status" => "started",
        "timestamp" => 1_686_943_588_415,
        "type" => "start"
      }
    ],
    "id" => "148ed676be4289",
    "image_ref" => %{
      "digest" => "sha256:a168417c058dd79793c8a8cc2d6ed259440335aec3a14cf4e8e4f742ceec3c1c",
      "labels" => nil,
      "registry" => "registry-1.docker.io",
      "repository" => "metabase/metabase",
      "tag" => "latest"
    },
    "instance_id" => "01H32THD5EHF6NSP4S62JV4AQS",
    "name" => "misty-wildflower-5126",
    "private_ip" => "fdaa:0:840c:a7b:175:25cb:e1d3:2",
    "region" => "yyz",
    "state" => "stopped",
    "updated_at" => "2023-06-16T19:27:36Z"
  },
  %{
    "checks" => [
      %{
        "name" => "servicecheck-00-tcp-5001",
        "output" => "Success",
        "status" => "passing",
        "updated_at" => "2023-06-02T08:57:12.666Z"
      }
    ],
    "config" => %{
      "env" => %{"FLY_PROCESS_GROUP" => "app", "PRIMARY_REGION" => "yyz"},
      "guest" => %{"cpu_kind" => "shared", "cpus" => 1, "memory_mb" => 256},
      "image" => "registry.fly.io/mvkvc-protohackers:deployment-01GZHQDCQT9FE4MKE8CVGJJK3Q",
      "init" => %{},
      "metadata" => %{
        "fly_platform_version" => "v2",
        "fly_previous_alloc" => "90734449-1895-2a3e-4818-9351f2134965",
        "fly_process_group" => "app",
        "fly_release_id" => "k4QVvkG11LgQOH7l1A79K14Pp",
        "fly_release_version" => "3"
      },
      "restart" => %{},
      "services" => [
        %{
          "checks" => [
            %{
              "grace_period" => "1s",
              "interval" => "15s",
              "timeout" => "2s",
              "type" => "tcp"
            }
          ],
          "concurrency" => %{
            "hard_limit" => 25,
            "soft_limit" => 20,
            "type" => "connections"
          },
          "force_instance_key" => nil,
          "internal_port" => 5001,
          "ports" => [%{"port" => 5001}],
          "protocol" => "tcp"
        }
      ],
      "stop_config" => %{"signal" => "SIGTERM", "timeout" => "5s"}
    },
    "created_at" => "2023-05-26T06:40:23Z",
    "events" => [
      %{
        "id" => "01H326E0HKABGPWWTJY7MN3C3T",
        "source" => "flyd",
        "status" => "started",
        "timestamp" => 1_686_922_265_139,
        "type" => "start"
      },
      %{
        "id" => "01H326E0B2XWFJ1WAMB61BGZ42",
        "source" => "flyd",
        "status" => "starting",
        "timestamp" => 1_686_922_264_930,
        "type" => "start"
      },
      %{
        "id" => "01H326E07YAWCMF98QYTY570ZG",
        "request" => %{
          "exit_event" => %{
            "error" => "",
            "exit_code" => 1,
            "exited_at" => "2023-06-16T13:31:04.673Z",
            "guest_error" => "",
            "guest_exit_code" => 0,
            "guest_signal" => -1,
            "oom_killed" => false,
            "requested_stop" => false,
            "restarting" => true,
            "signal" => -1
          },
          "restart_count" => 1
        },
        "source" => "flyd",
        "status" => "stopped",
        "timestamp" => 1_686_922_264_830,
        "type" => "exit"
      },
      %{
        "id" => "01H2S260QQKE1WVEY20DQ09GVS",
        "source" => "flyd",
        "status" => "started",
        "timestamp" => 1_686_615_818_999,
        "type" => "start"
      },
      %{
        "id" => "01H2S260HGQ9Z3ABH478W5VEAW",
        "source" => "flyd",
        "status" => "starting",
        "timestamp" => 1_686_615_818_800,
        "type" => "start"
      }
    ],
    "id" => "9080eeddce5287",
    "image_ref" => %{
      "digest" => "sha256:7f0df1d64f2af1ab8f14c4b49a1da7239b448d333004a8407157230b30b7e6a4",
      "labels" => nil,
      "registry" => "registry.fly.io",
      "repository" => "mvkvc-protohackers",
      "tag" => "deployment-01GZHQDCQT9FE4MKE8CVGJJK3Q"
    },
    "instance_id" => "01H1BCK4WWY79DW6HD8G9GPY14",
    "name" => "falling-voice-3345",
    "private_ip" => "fdaa:0:840c:a7b:f2:ed3e:2b2c:2",
    "region" => "yyz",
    "state" => "started",
    "updated_at" => "2023-06-16T13:31:05Z"
  }
]
```

```elixir
Enum.map(x, fn y -> {y["id"], y["name"], y["config"]["image"], y["region"], y["state"]} end)
```
